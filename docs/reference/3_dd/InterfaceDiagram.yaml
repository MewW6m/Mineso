openapi: 3.0.0
info:
  title: ''
  version: ''
  description: |-
  

    <details><summary style="font-size:1.75em;">API一覧</summary><div>
    + 基本的にフロントがルーティング制御、バックがRestAPIサーバーの役割を行う。

    | URL                           | メソッド | API名                |
    | :---------------------------- | :------- | :------------------- |
    | /api/auth/{socialType}            | POST     | ソーシャルログイン   |
    | /api/@{userId}                    | GET      | ユーザー情報取得 |
    | /api/@{userId}                    | POST     | ユーザー情報更新     |
    | /api/@{userId}/follow             | JSON     | フォロー一覧取得     |
    | /api/@{userId}/follow/api/@{userId}   | POST     | フォロー更新         |
    | /api/@{userId}/follower           | GET      | フォロワー一覧取得   |
    | /api/@{userId}/follower/api/@{userId} | POST     | フォロワー更新       |
    | /api/tag/{tagName}                | GET      | タグ一覧取得         |
    | /api/nortification                | GET      | 通知一覧取得             |
    | /api/nortification/{norId}        | POST     | 通知フラグ更新       |
    | /api/setting/profile             | GET      | プロフィール設定取得 |
    | /api/setting/profile             | POST     | プロフィール設定更新 |
    | /api/setting/account             | GET      | アカウント設定取得   |
    | /api/setting/account             | POST     | アカウント設定更新   |
    | /api/setting/nortification       | GET      | 通知設定取得         |
    | /api/setting/nortification       | POST     | 通知設定更新         |
    | /api/setting/customize           | GET      | 表示設定取得         |
    | /api/setting/customize           | POST     | 表示設定更新         |

    </div></details>
servers:
  - url: 'http://localhost:8080'
    description: 開発環境
paths:
  '/api/auth/{socialType}':
    post:
      summary: ソーシャルログイン
      operationId: post-login
      responses:
        '200':
          description: OK
      description: ログインを行う
      tags:
        - API
    parameters:
      - schema:
          type: string
        name: socialType
        in: path
        required: true
        description: ログインに使用するサービスの種類
  '/api/@{userId}':
    get:
      summary: ユーザー情報取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: get-login
      description: ユーザーの詳細(ログイン時トップリダイレクト)
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: ユーザーID
  '/api/@{userId}/follow':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: ユーザーID
    get:
      summary: フォロー一覧取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: get-@-userId-follow
      description: そのユーザーのフォロー一覧
  '/api/@{userId}/follower':
    parameters:
      - schema:
          type: string
        name: userId
        in: path
        required: true
        description: ユーザーID
    get:
      summary: フォロワー一覧取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: get-@-userId-follower
      description: そのユーザーのフォロワーの一覧
  '/api/tag/{tagName}':
    parameters:
      - schema:
          type: string
        name: tagName
        in: path
        required: true
        description: タグ名
    get:
      summary: タグ一覧取得
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: 'get-tag-#-tagname'
      tags:
        - API
      description: ''
  /api/nortification:
    get:
      summary: 通知取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              ref: '#/components/schemas/defaulthtml'
              schema:
                $ref: '#/components/schemas/defaulthtml'
      operationId: get-nortification
      description: 通知
      security:
        - key: []
  /api/setting/profile:
    get:
      summary: プロフィール設定取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: get-setting-profile
      description: プロフィール設定
      security:
        - key: []
  /api/setting/account:
    get:
      summary: アカウント設定取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: get-setting-account
      description: アカウント設定
      security:
        - key: []
  /api/setting/nortification:
    get:
      summary: 通知設定取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: get-setting-nortification
      description: 通知設定
      security:
        - key: []
  /api/setting/customize:
    get:
      summary: 表示設定取得
      tags:
        - API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: get-setting-customize
      description: 表示(デザイン)設定
      security:
        - key: []
components:
  schemas:
    defaulthtml:
      type: string
      description: HTML
  securitySchemes:
    key:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: AuthrizationURL
          tokenUrl: TokenURL
          refreshUrl: RefreshUrl
          scopes: {}
        clientCredentials:
          tokenUrl: TokenURL
          refreshUrl: RefreshURL
          scopes:
            scope_1: description
